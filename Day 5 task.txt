//odd number in an array
const arr =[1,2,3,4,5,6,7,8,9,10];
const odd=[];
arr.forEach(number=>{
    if(number %2 !==0){
        odd.push(number);
    }
});
console.log(odd);

output:
[ 1, 3, 5, 7, 9 ]

//sum of all numbers in an array
const arr=[1,2,3,4,5,6,7,8,9,10];
let sum=0;
for (const value of arr){
    sum+=value;
}
console.log(sum);

output:
55

//return prime number
function getAllPrimeNumber(num) {
    var array = [];
    var isPrime;
    for (var i = 2; i <= num; i++) {    
      for (var j = 2; (isPrime = i === j || i % j !== 0) && j <= i / 2; j++) {}
  
      isPrime && array.push(i);
    }
    return array;
  }
  console.log(getAllPrimeNumber(5));
  console.log(getAllPrimeNumber(9));

output:
[ 2, 3, 5 ]
[ 2, 3, 5, 7 ]

//return palindrome
const getAllPalindromes = (words) => words.filter((word) => word.split("").reverse().join("") === word);

console.log(getAllPalindromes(["hello", "noon"]));

output:
[
  "noon"
]

//remove duplicate from an array
let chars = ['A', 'B', 'A', 'C', 'B'];
chars.indexOf('B');
output:
1

//rotate array by k times
function RightRotate(a, n, k)
{
  
    // If rotation is greater
    // than size of array
    k = k % n;
  
    for (let i = 0; i < n; i++) {
        if (i < k) {
  
            // Printing rightmost
            // kth elements
            document.write(a[n + i - k] + " ");
        }
        else {
  
            // Prints array after
            // 'k' elements
            document.write((a[i - k]) + " ");
        }
    }
    document.write("<br>");
}
// Driver code
let Array = [1, 2, 3, 4, 5];
let N = Array.length;
let K = 2;
  
RightRotate(Array, N, K);

output:
4 5 1 2 3

//convert all the strings to title caps in a string array
function toTitleCase(str) {
  return str.toLowerCase().split(' ').map(function (word) {
    return (word.charAt(0).toUpperCase() + word.slice(1));
  }).join(' ');
}
console.log(toTitleCase("welcome to india"));

Output:
Welcome To India

2. using arrow function:

//sum of all numbers
[1, 2, 3, 4].reduce((a, b) => a + b, 0)

// Output: 10

